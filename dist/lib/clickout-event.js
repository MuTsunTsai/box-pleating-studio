/**
 * clickout-event v1.0.2
 * (c) 2020 Mu-Tsun Tsai
 * Released under the MIT License.
 */
!function(){"use strict";const t="on",e="out",n="stop",s="apply",o="target",i="Propagation",c="addEventListener",u="setAttribute",d="prototype",h=Symbol(e),a=Object,r=document,l=MouseEvent,p=HTMLElement,m=p[d],f=Event[d],b=["click","dblclick","mousedown","mouseup","touchstart","touchend"],y=new Set(b),v=new Set(b.map(t=>t+e)),w=new Set(b.map(n=>t+n+e)),E=(t,e)=>t instanceof e,g=(t,e)=>t.contains(e),S=(t,e)=>{for(let n of t)e(n)},L=n=>{E(n,p)&&(n[h]?N(n):S(y,s=>{let o=t+s+e,i=n.getAttribute(o);i&&!M(n)[o]&&n[u](o,i)}),S(n.childNodes,L))},M=t=>t[h]=t[h]||{},N=t=>{M(t),P.includes(t)||(P.push(t),F=!0)},T=(t,e)=>g(e,t)?1:g(t,e)?-1:0,j=t=>{F&&(P.sort(T),F=!1);let s=t[o];(t=E(t,l)?new l(t.type+e,a.assign({},t,{relatedTarget:s})):new TouchEvent(t.type+e,t))[n]=[],S(P,e=>{g(e,s)||t[n].some(t=>g(t,e))||e.dispatchEvent(t)})},k=t=>function(){let e=this,i=e.type;t[s](e),y.has(i)&&j(e),v.has(i)&&e[n].push(e[o])},A=(t,e,n)=>t[e]=n(t[e]);function O(e){let n=this[h][t+e.type];n&&n[s](this,[e])}let P=[],F=!1;S(y,n=>{r[c](n,j);let s=t+n+e;a.defineProperty(m,s,{get(){return this[h][s]},set(t){this[c](n+e,O),this[h][s]="object"==typeof t?t.handleEvent:t}})}),A(m,c,t=>function(...e){v.has(e[0])&&N(this),t[s](this,e)}),A(m,u,t=>function(...e){w.has(e[0])?this[e[0]]=new Function(e[1]):t[s](this,e)}),A(f,n+i,k),A(f,n+"Immediate"+i,k),new MutationObserver(t=>{S(t,t=>{S(t.addedNodes,L),S(t.removedNodes,t=>{E(t,p)&&(P=P.filter(e=>!g(t,e)))})})}).observe(r.documentElement,{childList:!0,subtree:!0}),L(r.body)}();